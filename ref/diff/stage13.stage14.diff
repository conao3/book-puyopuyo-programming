diff -u -r stage13/www/index.html stage14/www/index.html
--- stage13/www/index.html	2025-10-19 16:59:28.975641118 +0900
+++ stage14/www/index.html	2025-10-19 16:59:28.825645861 +0900
@@ -36,6 +36,7 @@
         <img src="img/7.png" id="font_7">
         <img src="img/8.png" id="font_8">
         <img src="img/9.png" id="font_9">
+        <img src="img/batankyu.png" id="batankyu">
     </div>
 </body>
 
diff -u -r stage13/www/src/config.js stage14/www/src/config.js
--- stage13/www/src/config.js	2025-10-19 16:59:28.985640802 +0900
+++ stage14/www/src/config.js	2025-10-19 16:59:28.833645608 +0900
@@ -41,4 +41,6 @@
     static pieceBonusTable = [0, 0, 0, 0, 0, 2, 3, 4, 5, 6, 7, 10]; // 連結ボーナステーブル
     static colorBonusTable = [0, 0, 3, 6, 12, 24]; // 色数ボーナステーブル
     static zenkeshiBonus = 3600; // 全消し時のボーナス
+
+    static batankyuAnimationFrames = 1000; // ばたんきゅ～アニメーションのフレーム数
 }
diff -u -r stage13/www/src/game.js stage14/www/src/game.js
--- stage13/www/src/game.js	2025-10-19 16:59:28.987640738 +0900
+++ stage14/www/src/game.js	2025-10-19 16:59:28.834645577 +0900
@@ -112,6 +112,13 @@
                 gameState = 'playing';
             }
             break;
+        case 'gameOver':
+            GameImage.prepareBatankyuAnimation(frame);
+            gameState = 'batankyu';
+            break;
+        case 'batankyu':
+            GameImage.updateBatankyu(frame);
+            break;
     }
     frame++;
     setTimeout(gameLoop, 1000 / 60); // 1/60秒後にもう一度呼び出す
diff -u -r stage13/www/src/image.js stage14/www/src/image.js
--- stage13/www/src/image.js	2025-10-19 16:59:28.980640960 +0900
+++ stage14/www/src/image.js	2025-10-19 16:59:28.829645735 +0900
@@ -1,6 +1,8 @@
 class GameImage {
     static puyoImageList = null;
     static digitImageList = null;
+    static batankyuImage = null;
+    static gameOverFrame = 0;
 
     static initialize() {
         // ぷよ画像を準備する
@@ -27,6 +29,11 @@
 
             GameImage.digitImageList[i] = image;
         }
+
+        // ばたんきゅ～画像を準備する
+        GameImage.batankyuImage = document.getElementById("batankyu");
+        GameImage.batankyuImage.width = Config.puyoImageWidth * Config.stageCols;
+        GameImage.batankyuImage.style.position = 'absolute';
     }
 
     // ぷよ画像を複製して返す
@@ -45,4 +52,27 @@
     static getDigitImageWidth() {
         return GameImage.digitImageList[0].width;
     }
+
+    // ばたんきゅ～の準備をする
+    static prepareBatankyuAnimation(frame) {
+        // ゲームオーバー時のフレーム数を記録しておく
+        GameImage.gameOverFrame = frame;
+        // ばたんきゅ～画像を、ステージ要素の下に再配置する
+        Stage.stageElement.appendChild(GameImage.batankyuImage);
+        // ばたんきゅ～の位置をセットする
+        GameImage.updateBatankyu(frame);
+    }
+
+    // ばたんきゅ～のアニメーションをする
+    static updateBatankyu(frame) {
+        // アニメーションの進行割合を計算する
+        const ratio = (frame - GameImage.gameOverFrame) / Config.batankyuAnimationFrames;
+        // 三角関数を使って、滑らかなアニメーションに見えるような位置を計算する
+        const height = Config.puyoImageHeight * Config.stageRows;
+        const x = Math.sin(ratio * Math.PI * 2 * 5) * Config.puyoImageWidth;
+        const y = -Math.cos(ratio * Math.PI * 2) * height / 4 + height / 2;
+        // ばたんきゅ～画像に計算した位置を指定する
+        GameImage.batankyuImage.style.left = x + 'px';
+        GameImage.batankyuImage.style.top = y + 'px';
+    }
 }
